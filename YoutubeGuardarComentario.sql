create or replace PROCEDURE P_GUARDAR_COMENTARIO (
    P_CODIGO_COMENTARIO OUT TBL_COMENTARIOS.CODIGO_COMENTARIO%TYPE,
    P_CODIGO_COMENTARIO_PADRE TBL_COMENTARIOS.CODIGO_COMENTARIO_PADRE%TYPE,
    P_CODIGO_USUARIO TBL_COMENTARIOS.CODIGO_USUARIO%TYPE,
    P_CODIGO_VIDEO TBL_COMENTARIOS.CODIGO_VIDEO%TYPE,
    P_COMENTARIO TBL_COMENTARIOS.COMENTARIO%TYPE,
    P_MENSAJE_RESULTADO OUT VARCHAR2
) IS
    V_EXCEPCION_VIDEO EXCEPTION;
    V_EXCEPCION_USUARIO EXCEPTION;
    V_CODIGO_USUARIO TBL_USUARIOS.CODIGO_USUARIO%TYPE;
BEGIN
    BEGIN
        SELECT CODIGO_USUARIO
        INTO V_CODIGO_USUARIO
        FROM TBL_VIDEOS
        WHERE CODIGO_VIDEO = P_CODIGO_VIDEO;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE V_EXCEPCION_VIDEO;
    END;

    BEGIN
        SELECT CODIGO_USUARIO
        INTO V_CODIGO_USUARIO
        FROM TBL_USUARIOS
        WHERE CODIGO_USUARIO = P_CODIGO_USUARIO;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE V_EXCEPCION_USUARIO;
    END;   
    P_CODIGO_COMENTARIO := SEQ_CODIGO_COMENTARIO.NEXTVAL;

    INSERT INTO tbl_comentarios (
        codigo_comentario,
        codigo_comentario_padre,
        codigo_usuario,
        codigo_video,
        comentario,
        fecha_publicacion,
        cantidad_likes
    ) VALUES (
        P_CODIGO_COMENTARIO,
        P_CODIGO_COMENTARIO_PADRE,
        P_CODIGO_USUARIO,
        P_CODIGO_VIDEO,
        P_COMENTARIO,
        SYSDATE,
        0
    );

    P_GUARDAR_NOTIFICACION(
        P_codigo_usuario_origen => P_CODIGO_USUARIO,
        P_codigo_usuario_destino => V_CODIGO_USUARIO,
        P_texto_notificacion => 'NUEVO COMENTARIO: ' || P_COMENTARIO,
        P_codigo_videO => P_CODIGO_VIDEO
    );
    COMMIT;
EXCEPTION
WHEN V_EXCEPCION_VIDEO THEN
    P_MENSAJE_RESULTADO := 'EL VIDEO NO EXISTE'; 
    ROLLBACK;
WHEN V_EXCEPCION_USUARIO THEN
    P_MENSAJE_RESULTADO := 'EL USUARIO NO EXISTE';
    ROLLBACK;
END;